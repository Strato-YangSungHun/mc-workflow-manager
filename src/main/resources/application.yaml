#application server port 설정
server:
  port: 8080

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

spring:
  application:
    name: wfManager #application 이름 설정 ( 필수 : opentracing에도 사용 됨 )

#DB Connection 설정
  datasource:
    hikari:
      username: #db user-name value 들어가야함.
      password: #db password value 들어가야함.
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      jdbc-url:  # {url}:{port}/{db schema}?serverTimeZone=UTC
      idle-timeout: 250 #pool에서 일 안하는 커넥션 유지시간. ( default: 600000ms : 10min )
      max-lifetime: 250 #connections pool에 있을 수 있는 최대 시간. ( 사용중인 connection은 제거되지 않음 , default:1800000ms : 30min )



#Actuator 사용 설정
management:
  endpoints:
    enabled-by-default: false #기본 enable로 설정되어 있는 값을 disable로 설정 ( 보안 처리를 위해 필요한곳만 enable 처리 )
    web:
      exposure:
        include: info, health, metrics #보안처리
      base-path: /mmpact
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    metrics:
      enabled: true

#Jaeger 설정
# opentracing.jaeger.service-name 이 없을시 spring.application.name 으로 사용된다.
# tracing log의 header format을 정할 수 있음.
# - opentracing.jaeger.enable-b3-propagation = true ( B3 : zipkin collector 호환성 포맷 )
# - opentracing.jaeger.enable-w3c-propagation = true ( W3C Trace Context format )
opentracing:
  jaeger:
    udp-sender:
      host: 210.217.178.128
      port: 30689
    const-sampler:
      decision: true #모든 Trace가 sampled된다.
    probabilistic-sampler:
      sampling-rate: 1.0 #rate는 0.0(no sampling) 과 1.0(every request) 사이
    enabled: true #Jaeger Tracing을 사용 여부 설정.


springdoc:
  swagger-ui:
    groups-order: desc                  #정렬 순서 정의
    operations-sorter: method           #명세서 안에 메소드 순으로 정렬
  show-actuator: true                   #actuator uri 보여짐.
#  api 명세서 scan 대상 ( package, uri path ) 설정 안하면 전체를 대상으로 스캔함.
#  packages-to-scan:
#    - kr.co.strato.mmpstartkit.controller
#  paths-to-match:
#    - /api/**




<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.strato.mcmp.jenkins.pipeline.mapper.JenkinsPipelineMapper">
	<sql id="selectJenkinsPipelineQuery">
		SELECT  jks.pipeline_id
			   ,jks.pipeline_cd
			   ,cd.code_name			AS pipelineCdName
			   ,jks.pipeline_name
			   ,jks.pipeline_script
			   ,jks.reg_id
			   ,jks.reg_name
			   ,jks.reg_date
			   ,jks.mod_id
			   ,jks.mod_name
			   ,jks.mod_date
		  FROM jenkins_pipeline jks
		 INNER JOIN common_code cd
		    ON cd.common_group_cd = 'Pipeline'
		   AND jks.pipeline_cd    = cd.common_cd		    
	</sql>
	
	<select id="selectJenkinsPipelineList" parameterType="Pipeline" resultType="Pipeline">
        /* JenkinsPipelineMapper.selectJenkinsPipelineList */
		<include refid="selectJenkinsPipelineQuery" />
		<where>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(pipelineCd)">
		   AND jks.pipeline_cd    = #{pipelineCd} 
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(pipelineName)">
		   AND jks.pipeline_name  = CONCAT('%', #{pipelineName}, '%') 
			</if>
		</where>
	</select>

	<select id="selectJenkinsPipeline" parameterType="Integer" resultType="Pipeline">
        /* JenkinsPipelineMapper.selectJenkinsPipeline */
		<include refid="selectJenkinsPipelineQuery" />
		 WHERE jks.pipeline_id = #{pipelineId}
	</select>
	<select id="selectJenkinsPipelineDetail" parameterType="String" resultType="Pipeline">
		/* JenkinsPipelineMapper.selectJenkinsPipelineDetail */
		<include refid="selectJenkinsPipelineQuery" />
		WHERE jks.pipeline_cd = #{pipelineCd}
	</select>
	
	<select id="isPipelineNameDuplicated" parameterType="Pipeline" resultType="boolean">
        /* JenkinsPipelineMapper.isPipelineNameDuplicated */
        SELECT (CASE WHEN COUNT(*) > 0 THEN true ELSE false END) AS duplicated
          FROM jenkins_pipeline
		 WHERE pipeline_cd       = #{pipelineCd} 
           AND pipeline_name     = #{pipelineName}
	</select>
	
	<insert id="insertJenkinsPipeline" parameterType="Pipeline" useGeneratedKeys="true" keyColumn="pipeline_id" keyProperty="pipelineId">
        /* JenkinsPipelineMapper.insertJenkinsPipeline */
        INSERT INTO jenkins_pipeline (
        	    pipeline_cd
        	   ,pipeline_name
        	   ,pipeline_script
        	   ,reg_id
        	   ,reg_name
        	   ,reg_date
		) VALUES ( 
        	    #{pipelineCd}
        	   ,#{pipelineName}
        	   ,#{pipelineScript}
        	   ,#{regId}
        	   ,#{regName}
        	   , now()
			/*,NOW() for mariaDB*/
-- 			, datetime()
		)        
	</insert>
	
	<update id="updateJenkinsPipeline" parameterType="Pipeline">
        /* JenkinsPipelineMapper.updateJenkinsPipeline */
        UPDATE jenkins_pipeline
		   SET  mod_id    		 = #{modId}
		       ,mod_name  		 = #{modName}
		       ,mod_date  		 = now() /*datetime()*/
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(pipelineScript)">
		       ,pipeline_script  = #{pipelineScript}
		</if>
         WHERE pipeline_id		 = #{pipelineId}
	</update>
	
	<delete id="deleteJenkinsPipeline" parameterType="Integer">
        /* JenkinsPipelineMapper.deleteJenkinsPipeline */
        DELETE FROM jenkins_pipeline
         WHERE pipeline_id		 = #{pipelineId}
	</delete>
</mapper>
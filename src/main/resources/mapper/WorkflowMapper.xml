<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.strato.mcmp.workflow.mapper.WorkflowMapper">
    <resultMap id="paramResultMap" type="HashMap">
        <result property="paramKey" column="param_key"/>
        <result property="paramValue" column="param_value"/>
        <result property="paramDesc" column="param_desc"/>
        <result property="regId" column="reg_id"/>
        <result property="regName" column="reg_name"/>
        <result property="regDate" column="reg_date"/>
    </resultMap>

    <sql id="selectWorkflowQuery_SELECT">
        SELECT
              wf.workflow_id
             ,wf.workflow_name
             ,wf.workflow_purpose
             ,wf.jenkins_id
             ,wf.jenkins_job_name
             ,wf.pipeline_script
             ,wf.reg_id
             ,wf.reg_name
             ,wf.reg_date
             ,wf.mod_id
             ,wf.mod_name
             ,wf.mod_date
    </sql>

    <sql id="selectWorkflowQuery_FROM">
        FROM workflow_v2 wf
        INNER JOIN oss ON wf.jenkins_id = oss.oss_id
    </sql>



    <select id="selectWorkflowList" parameterType="Workflow" resultType="Workflow">
        /* WorkflowMapper.selectWorkflowList */
        <include refid="selectWorkflowQuery_SELECT"/>
            ,oss.oss_url as jenkins_url
            ,oss.oss_name as jenkins_name
            ,COUNT(*) OVER () AS totalCount
        <include refid="selectWorkflowQuery_FROM"/>
        <where>
            <if test="workflowName != null">
                AND wf.workflow_name = #{workflowName}
            </if>
        </where>
        ORDER BY wf.reg_date DESC
    </select>

    <insert id="insertWorkflow" parameterType="Workflow" useGeneratedKeys="true" keyColumn="workflow_id" keyProperty="workflowId">
        /* WorkflowMapper.insertWorkflow */
        INSERT INTO workflow_v2 (
            workflow_name
            ,workflow_purpose
            ,jenkins_id
            ,jenkins_job_name
            ,pipeline_script
            ,reg_id
            ,reg_name
            ,reg_date
        ) VALUES (
             #{workflowName}
             ,#{workflowPurpose}
             ,#{jenkinsId}
             ,#{jenkinsJobName}
             ,#{pipelineScript}
             ,#{regId}
             ,#{regName}
             ,NOW()
         )
    </insert>
    <insert id="insertWorkflowParams" parameterType="Workflow">
        /* WorkflowMapper.insertWorkflowParams */
        INSERT INTO workflow_param (
             workflow_id
            ,param_key
            ,param_value
            ,param_desc
            ,reg_id
            ,reg_name
            ,reg_date

        ) VALUES
        <foreach collection="pipelineParam" item="param" separator="," >
        (
            #{workflowId}
            ,#{param.paramKey}
            ,#{param.paramValue}
            ,#{param.paramDesc}
            ,#{regId}
            ,#{regName}
            ,NOW()
        )
        </foreach>
    </insert>


    <insert id="insertWorkflowPipeline" parameterType="Workflow">
        /* WorkflowMapper.insertWorkflowPipeline */
        INSERT INTO workflow_jenkins_pipeline_mapping (
        workflow_id
        ,pipeline_order
        ,pipeline_cd
        ,pipeline_script
        ,reg_id
        ,reg_name
        ,reg_date
        ) VALUES
        <foreach collection="pipelines" item="pipeline" separator="," >
            (
                #{workflowId}
                ,#{pipeline.pipelineOrder}
                ,#{pipeline.pipelineCd}
                ,#{pipeline.pipelineScript}
                ,#{regId}
                ,#{regName}
                ,NOW()
            )
        </foreach>
    </insert>

    <select id="selectWorkflow" parameterType="int" resultType="Workflow">
        /* WorkflowMapper.selectWorkflow */
        <include refid="selectWorkflowQuery_SELECT"/>
        ,oss.oss_url as jenkins_url
        ,oss.oss_name as jenkins_name
--         ,(select * from workflow_param wp where wf.workflow_id = wp.workflow_id) as pipelineParam
        <include refid="selectWorkflowQuery_FROM"/>
        WHERE wf.workflow_id = #{workflowId}
    </select>
    <select id="selectWorkflowForName" parameterType="string" resultType="Workflow">
        /* WorkflowMapper.selectWorkflowForName */
        <include refid="selectWorkflowQuery_SELECT"/>
        ,oss.oss_url as jenkins_url
        ,oss.oss_name as jenkins_name
        <include refid="selectWorkflowQuery_FROM"/>
        WHERE wf.workflow_name = #{workflowName}
    </select>

    <select id="selectWorkflowParamList" parameterType="int" resultMap="paramResultMap">
        /* WorkflowMapper.selectWorkflowPipelineList */
        SELECT
              param_key
             ,param_value
             ,param_desc
             ,reg_id
             ,reg_name
             ,reg_date
        FROM workflow_param
        WHERE workflow_id = #{workflowId}
    </select>
    <select id="selectWorkflowPipelineList" parameterType="int" resultType="Pipeline">
        /* WorkflowMapper.selectWorkflowPipelineList */
        SELECT
            pipeline_order
            ,pipeline_cd
            ,pipeline_script
            ,reg_id
            ,reg_name
            ,reg_date
        FROM workflow_jenkins_pipeline_mapping
        WHERE workflow_id = #{workflowId}
        ORDER BY pipeline_order ASC, mapping_id ASC
    </select>

    <select id="isWorkflowNameDuplicated" parameterType="String" resultType="boolean">
        /* WorkflowMapper.isWorkflowNameDuplicated */
        SELECT (CASE WHEN COUNT(*) > 0 THEN true ELSE false END) AS duplicated
        FROM workflow_v2
        WHERE workflow_name = #{workflowName}
    </select>

    <update id="updateWorkflow" parameterType="Workflow">
        /* WorkflowMapper.updateWorkflow */
        UPDATE workflow_v2
        SET
          pipeline_script	= #{pipelineScript}
          ,mod_id			= #{modId}
          ,mod_name		    = #{modName}
          ,mod_date		    = NOW()
        WHERE
           workflow_id		= #{workflowId}
    </update>

    <delete id="deleteWorkflow" parameterType="int">
        /* WorkflowMapper.deleteWorkflow */
        DELETE FROM workflow_v2
        WHERE workflow_id = #{workflowId}
    </delete>

    <delete id="deleteWorkflowParam" parameterType="int">
        /* WorkflowMapper.deleteWorkflowParam */
        DELETE FROM workflow_param
        WHERE workflow_id = #{workflowId}
    </delete>




































    <insert id="insertWorkflowHistory" parameterType="WorkflowHistory" useGeneratedKeys="true" keyColumn="workflow_history_id" keyProperty="workflowHistoryId">
        /* WorkflowMapper.insertWorkflowHistory */
        INSERT INTO workflow_history (
        workflow_id
        ,workflow_yaml
        ,pipeline_script
        <if test="jenkinsBuildId != null">
            ,jenkins_build_id
        </if>
        <if test="buildNumber != null">
            ,build_number
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(runResult)">
            ,run_result
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(runMessage)">
            ,run_message
        </if>
        ,run_user_id
        ,run_user_name
        ,run_date
        ) VALUES (
        #{workflowId}
        ,#{workflowYaml}
        ,#{pipelineScript}
        <if test="jenkinsBuildId != null">
            ,#{jenkinsBuildId}
        </if>
        <if test="buildNumber != null">
            ,#{buildNumber}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(runResult)">
            ,#{runResult}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(runMessage)">
            ,#{runMessage}
        </if>
        ,#{runUserId}
        ,#{runUserName}
        ,NOW()
        )
    </insert>

    <delete id="deleteWorkflowPipeline" parameterType="int">
        /* WorkflowMapper.deleteWorkflowPipeline */
        DELETE FROM workflow_jenkins_pipeline_mapping
        WHERE workflow_id = #{workflowId}
    </delete>


    <sql id="selectWorkflowHistoryQuery">
        SELECT
              workflow_history_id
             ,workflow_id
             ,jenkins_build_id
             ,build_number
             ,run_result
             ,run_message
             ,run_user_id
             ,run_user_name
             ,run_date
    </sql>

    <select id="selectWorkflowHistoryList" parameterType="int" resultType="WorkflowHistory">
        /* WorkflowMapper.selectWorkflowHistoryList */
        <include refid="selectWorkflowHistoryQuery" />
        FROM workflow_history
        WHERE workflow_id = #{workflowId}
        ORDER BY workflow_history_id DESC
    </select>

    <select id="selectWorkflowHistory" parameterType="int" resultType="WorkflowHistory">
        /* WorkflowMapper.selectWorkflowHistory */
        <include refid="selectWorkflowHistoryQuery" />
        ,workflow_yaml
        ,pipeline_script
        FROM workflow_history
        WHERE workflow_history_id = #{workflowHistoryId}
    </select>


    <update id="updateWorkflowHistory" parameterType="WorkflowHistory">
        /* WorkflowMapper.updateWorkflowHistory */
        UPDATE workflow_history
        SET  run_result    = #{runResult}
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(runMessage)">
            ,run_message   = #{runMessage}
        </if>
        <if test="jenkinsBuildId != null">
            ,jenkins_build_id = #{jenkinsBuildId}
        </if>
        <if test="buildNumber != null">
            ,build_number         = #{buildNumber}
        </if>
        WHERE workflow_history_id = #{workflowHistoryId}
    </update>

    <delete id="deleteWorkflowHistory" parameterType="int">
        /* WorkflowMapper.deleteWorkflowHistory */
        DELETE FROM workflow_history
        WHERE workflow_id = #{workflowId}
    </delete>

<!--    ======================================================================================= -->

</mapper>